{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getPostComments","postId","fetch","then","response","json","comments","data","filter","com","PostsList","props","useState","posts","setUserPost","isOpen","isOpenChange","openPostId","setOpenPostId","handleChange","useCallback","post","res","userPosts","userId","useEffect","className","map","key","id","title","type","onClick","handleOpen","NewCommentForm","name","setName","email","setEmail","comment","setComment","newComment","body","onSubmit","event","handleSubmit","SubmitAndClearForm","placeholder","value","onChange","target","PostDetails","selectedPostId","setPost","setComments","isCommentsShow","isCommentsShowToggle","item","handleRemove","commentId","method","removeComment","commentsArr","hidden","length","obj","preventDefault","JSON","stringify","patch","App","selectedUserId","setSelectedUserId","setSelectedPostId","users","setUsers","usersFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c153461.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport function getUsers() {\n  return fetch(`${BASE_URL}/users/`)\n    .then(res => res.json())\n    .then(users => users.data);\n}\n\nexport function getUserPosts(userId) {\n  return fetch(`${BASE_URL}/posts`)\n    .then(post => post.json())\n    .then(res => res.data);\n}\n\nexport function getPostDetails(postId) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(res => res.json())\n    .then(res => res.data);\n}\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(comments => comments.data.filter(com => com.postId === postId));\n}\n\nexport function removeComment(commentId) {\n  return fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n}\n\nexport function patch(obj) {\n  return fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify({ ...obj }),\n  });\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = (props) => {\n  const [posts, setUserPost] = useState([]);\n  const [isOpen, isOpenChange] = useState(false);\n  const [openPostId, setOpenPostId] = useState('');\n  const handleChange = useCallback(() => {\n    return getUserPosts()\n      .then((userPosts) => {\n        if (userPosts && !+props.userId) {\n          setUserPost(userPosts);\n        } else if (userPosts) {\n          setUserPost(userPosts.filter(post => post.userId === +props.userId));\n        }\n      });\n  }, [props.userId]);\n\n  useEffect(() => {\n    handleChange();\n  }, [props.userId, handleChange]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts ? posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            {isOpen && openPostId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  props.handleOpen(0);\n                  isOpenChange(false);\n                  setOpenPostId(post.id);\n                }}\n              >\n                close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  props.handleOpen(post.id);\n                  isOpenChange(true);\n                  setOpenPostId(post.id);\n                }}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        )) : `not post yet`}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  handleOpen: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = (props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n  const newComment = {\n    postId: props.postId,\n    name,\n    email,\n    body: comment,\n  };\n\n  const SubmitAndClearForm = (event) => {\n    props.handleSubmit(event, newComment);\n    setComment('');\n    setEmail('');\n    setName('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        SubmitAndClearForm(event);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={comment}\n          onChange={event => setComment(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport {\n  getPostDetails,\n  getPostComments,\n  removeComment,\n  patch,\n} from '../../api/posts';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState('');\n  const [comments, setComments] = useState([]);\n  const [isCommentsShow, isCommentsShowToggle] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId).then(item => setPost(item));\n\n    getPostComments(selectedPostId).then(comment => setComments(comment));\n  }, [selectedPostId]);\n\n  const handleSubmit = (event, obj) => {\n    event.preventDefault();\n    patch(obj).then(() => getPostComments(selectedPostId)\n      .then(commentsArr => setComments(commentsArr))\n      .then());\n  };\n\n  const handleRemove = (commentId) => {\n    removeComment(commentId)\n      .then(() => getPostComments(selectedPostId))\n      .then(commentsArr => setComments(commentsArr));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post ? post.body : 'Loading...'}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          hidden={!comments.length}\n          type=\"button\"\n          className=\"button\"\n          onClick={() => isCommentsShowToggle(!isCommentsShow)}\n        >\n          {isCommentsShow\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`}\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {comments\n            && isCommentsShow\n            && comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleRemove(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={selectedPostId} handleSubmit={handleSubmit} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport \"./styles/general.scss\";\n\nimport { PostsList } from \"./components/PostsList\";\nimport { PostDetails } from \"./components/PostDetails\";\nimport { getUsers } from \"./api/posts\";\n\nconst App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const handleOpen = (postId) => {\n    if (postId) {\n      setSelectedPostId(postId);\n\n      return;\n    }\n\n    setSelectedPostId('');\n  };\n\n  useEffect(() => {\n    getUsers().then(usersFromServer => setUsers(usersFromServer));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={(event) => setSelectedUserId(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map((user) => {\n              return (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList userId={selectedUserId} handleOpen={handleOpen} />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}